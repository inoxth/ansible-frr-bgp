---
- name: BGP-peer/ create peer-group
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      neighbor {{ item.ip }} peer-group
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.ispeergroup is defined and item.ispeergroup and " neighbor " ~ item.ip ~ " peer-group" not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} peer-group"

- name: BGP-peer/ set remote-as
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      neighbor {{ item.ip }} remote-as {{ item.remote_as }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: item.remote_as is defined and " neighbor " ~ item.ip ~ " remote-as " ~ item.remote_as not in frr_config.stdout_lines
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} remote-as {{ item.remote_as }}"

- name: BGP-peer/ activate address family
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      neighbor {{ item.ip }} activate
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '( item.ispeergroup is not defined and (
      (item.address_family == "ipv4" and frr_bgp_ipv4[item.ip] is not defined) or
      (item.address_family == "ipv6" and frr_bgp_ipv6[item.ip] is not defined)
    )) or (
      item.ispeergroup is defined and item.ispeergroup and
      "  neighbor " ~ item.ip ~ " activate" not in frr_config.stdout_lines
    )'
  changed_when: false
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} activate"

- name: BGP-peer/ set neighbor peer password
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      neighbor {{ item.ip }} password {{ item.password }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.password is defined and
    " neighbor " ~ item.ip ~ " password " ~ item.password not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} password"

- name: BGP-peer/ set neighbor peer local-as
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      neighbor {{ item.ip }} local-as {{ item.local_as }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.local_as is defined and
    " neighbor " ~ item.ip ~ " local-as " ~ item.local_as not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} local-as"

- name: BGP-peer/ set neighbor peer description
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      neighbor {{ item.ip }} description {{ item.desc }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.desc is defined and
    " neighbor " ~ item.ip ~ " description " ~ item.desc not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} description"

- name: BGP-peer/ set neighbor peer shutdown status
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      {{ 'no' if item.shutdown is not defined else '' }} neighbor {{ item.ip }} shutdown
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '(item.shutdown is defined and
    " neighbor " ~ item.ip ~ " shutdown" not in frr_config.stdout_lines) or
    (item.shutdown is not defined and
    " neighbor " ~ item.ip ~ " shutdown" in frr_config.stdout_lines)'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "{{ 'no ' if item.shutdown is not defined else '' }}neighbor {{ item.ip }} shutdown"

- name: BGP-peer/ set neighbor peer bfd status
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      {{ 'no' if item.bfd is not defined else '' }} neighbor {{ item.ip }} bfd
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '(item.bfd is defined and
    " neighbor " ~ item.ip ~ " bfd" not in frr_config.stdout_lines) or
    (item.bfd is not defined and
    " neighbor " ~ item.ip ~ " bfd" in frr_config.stdout_lines)'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "{{ 'no ' if item.bfd is not defined else '' }}neighbor {{ item.ip }} bfd"

- name: BGP-peer/ set neighbor peer next-hop-self
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      {{ 'no' if item.next_hop_self is not defined else '' }} neighbor {{ item.ip }} next-hop-self
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '(item.next_hop_self is defined and
    "  neighbor " ~ item.ip ~ " next-hop-self" not in frr_config.stdout_lines) or
    (item.next_hop_self is not defined and
    "  neighbor " ~ item.ip ~ " next-hop-self" in frr_config.stdout_lines)'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "{{ 'no ' if item.next_hop_self is not defined else '' }}neighbor {{ item.ip }} next-hop-self"

- name: BGP-peer/ set neighbor peer addpath-tx-all-paths
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      {{ 'no' if item.addpath_tx_all_paths is not defined else '' }} neighbor {{ item.ip }} addpath-tx-all-paths
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '(item.addpath_tx_all_paths is defined and
    "  neighbor " ~ item.ip ~ " addpath-tx-all-paths" not in frr_config.stdout_lines) or
    (item.addpath_tx_all_paths is not defined and
    "  neighbor " ~ item.ip ~ " addpath-tx-all-paths" in frr_config.stdout_lines)'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "{{ 'no ' if item.addpath_tx_all_paths is not defined else '' }}neighbor {{ item.ip }} addpath-tx-all-paths"

- name: BGP-peer/ set neighbor peer route-reflector-client status
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      {{ 'no' if item.route_reflector_client is not defined else '' }} neighbor {{ item.ip }} route-reflector-client
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '(item.route_reflector_client is defined and
    "  neighbor " ~ item.ip ~ " route-reflector-client" not in frr_config.stdout_lines) or
    (item.route_reflector_client is not defined and
    "  neighbor " ~ item.ip ~ " route-reflector-client" in frr_config.stdout_lines)'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "{{ 'no ' if item.route_reflector_client is not defined else '' }}neighbor {{ item.ip }} route-reflector-client"

- name: BGP-peer/ set neighbor peer 'ebgp-multihop' # noqa: yaml[line-length]
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      {{ 'no' if item.ebgp_multihop is not defined else '' }} neighbor {{ item.ip }} ebgp-multihop{{ ' ' ~ item.ebgp_multihop if item.ebgp_multihop is defined else '' }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '(item.ebgp_multihop is defined and
    " neighbor " ~ item.ip ~ " ebgp-multihop " ~ item.ebgp_multihop not in frr_config.stdout_lines) or
    (item.ebgp_multihop is not defined and
    frr_config.stdout is regex(" neighbor " ~ item.ip ~ " ebgp-multihop ") )'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "{{ 'no ' if item.ebgp_multihop is not defined else '' }}neighbor {{ item.ip }} ebgp-multihop"

- name: BGP-peer/ set neighbor peer 'update-source' # noqa: yaml[line-length]
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      {{ 'no' if item.update_source is not defined else '' }} neighbor {{ item.ip }} update-source{{ ' ' ~ item.update_source if item.update_source is defined else '' }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '(item.update_source is defined and
    " neighbor " ~ item.ip ~ " update-source " ~ item.update_source not in frr_config.stdout_lines) or
    (item.update_source is not defined and
    frr_config.stdout is regex(" neighbor " ~ item.ip ~ " update-source ") )'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "{{ 'no ' if item.update_source is not defined else '' }}neighbor {{ item.ip }} update-source"

- name: BGP-peer/ set neighbor peer 'default-originate'
  ansible.builtin.include_tasks: frr_bgp_peers_default_originate.yml
  with_items: "{{ frr_bgp.peers }}"
  loop_control:
    label: "{{ 'no ' if item.default_originate is not defined else '' }}neighbor {{ item.ip }} default-originate"

- name: BGP-peer/ set neighbor peer remove-private-AS
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      {{ 'no' if item.remove_private_as is not defined else '' }} neighbor {{ item.ip }} remove-private-AS all
      "
  with_items: "{{ frr_bgp.peers }}"
  when: '(item.remove_private_as is defined and
    "  neighbor " ~ item.ip ~ " remove-private-AS all" not in frr_config.stdout_lines) or
    (item.remove_private_as is not defined and
    "  neighbor " ~ item.ip ~ " remove-private-AS all" in frr_config.stdout_lines)'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "{{ 'no ' if item.remove_private_as is not defined else '' }}neighbor {{ item.ip }} remove-private-AS"

- name: BGP-peer/ set peer maximum prefix
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      neighbor {{ item.ip }} maximum-prefix {{ item.maximum_prefix }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.maximum_prefix is defined and
    "  neighbor " ~ item.ip ~ " maximum-prefix " ~ item.maximum_prefix not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} maximum-prefix {{ item.maximum_prefix | default('NOTSET') }}"

- name: BGP-peer/ set peer maximum prefix out
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      neighbor {{ item.ip }} maximum-prefix-out {{ item.maximum_prefix_out }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.maximum_prefix_out is defined and
    "  neighbor " ~ item.ip ~ " maximum-prefix-out " ~ item.maximum_prefix_out not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} maximum-prefix-out {{ item.maximum_prefix_out | default('NOTSET') }}"

- name: BGP-peer/ set peer weight
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      neighbor {{ item.ip }} weight {{ item.weight }}
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.weight is defined and
    "  neighbor " ~ item.ip ~ " weight " ~ item.weight not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} weight {{ item.weight | default('NOTSET') }}"

- name: BGP-peer/ set peer route-map in
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      neighbor {{ item.ip }} route-map {{ item.route_map_in }} in
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.route_map_in is defined and
    "  neighbor " ~ item.ip ~ " route-map " ~ item.route_map_in ~ " in" not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} route-map {{ item.route_map_in | default('NOTSET') }} in"

- name: BGP-peer/ set peer route-map out
  ansible.builtin.shell:
    cmd: |
      vtysh -c "conf t
      router bgp {{ frr_bgp.asnum }}
      address-family {{ item.address_family }} unicast
      neighbor {{ item.ip }} route-map {{ item.route_map_out }} out
      "
  with_items: "{{ frr_bgp.peers }}"
  when: 'item.route_map_out is defined and
    "  neighbor " ~ item.ip ~ " route-map " ~ item.route_map_out ~ " out" not in frr_config.stdout_lines'
  changed_when: true
  notify: save frr config
  loop_control:
    label: "neighbor {{ item.ip }} route-map {{ item.route_map_out | default('NOTSET') }} out"

- name: BGP-peer/ set ipv4 peer-group members
  ansible.builtin.include_tasks: frr_bgp_peers_peergroup_member.yml
  with_items: "{{ frr_bgp.peers }}"
  loop_control:
    loop_var: peer
  when: peer.ispeergroup is defined and peer.ispeergroup and peer.members is defined
